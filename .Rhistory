req
json1 <- content(req)
json2 <- jsonlite::fromJSON(jsonlite::toJSON(json1))
json2[,2]
req <- GET("https://api.github.com/repos/jtleek/datasharing/events?page=3", config(token=github_token))
req <- GET("https://api.github.com/repos/jtleek/datasharing/commits", config(token=github_token))
View(json2)
req <- GET("https://api.github.com/users/jtleek/repos", config(token=github_token))
req
json1 <- content(req)
json2 <- jsonlite::fromJSON(jsonlite::toJSON(json1))
json2
install.packages("sqldf)")
install.packages("sqldf")
acs <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
acs <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv",destfile="./acs.csv")
acs <- read.table("./acs.csv")
sqldf("select pwgtp1 from acs")
library(sqldf)
sqldf("select pwgtp1 from acs")
?nchar
con <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(con)
close(con)
htmlCode[1]
nchars(htmlCode[c(10,20,30,100)])
nchars(htmlCode[c(10,20,30,100)])
nchar(htmlCode[c(10,20,30,100)])
for <- readLines(name.for)
for <- readLines("name.for")
data <- readLines("name.for")
data
x <- numeric
x <- numeric()
for(i in 1:length(data))
{}
for(i in 1:length(data))
{
''
}
?read.fwf
data <- read.fwf("name.for",widths=c(-1,9,-5,4,-1,3,-5,4,-1,3,-5,4,-1,3),sep="")
data <- read.fwf("name.for",widths=c(-1,9,-5,4,-1,3,-5,4,-1,3,-5,4,-1,3),sep="",skip=3,header=TRUE)
data <- read.fwf("name.for",widths=c(-1,9,-5,4,-1,3,-5,4,-1,3,-5,4,-1,3),sep="",skip=3)
data <- read.fwf("name.for",widths=c(-1,9,-5,4,-1,3,-5,4,-1,3,-5,4,-1,3),sep="",skip=4)
View(data)
View(data)
dim(data)
data <- read.fwf("name.for",widths=c(-1,9,-5,4,-1,3,-5,4,-1,3,-5,4,-1,3),sep="",skip=4, colClasses=c("character", "numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))
data <- read.fwf("name.for",widths=c(-1,9,-5,4,-1,3,-5,4,-1,3,-5,4,-1,3),sep="",skip=4, colClasses=c("character", "numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))
data <- read.fwf("name.for",widths=c(-1,9,-5,4,-1,3,-5,4,-1,3,-5,4,-1,3),sep="",skip=4, colClasses=c("character", "numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))
data <- read.fwf("name.for",widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4),sep="",skip=4, colClasses=c("character", "numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))
data <- read.fwf("name.for",widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4),sep="", colClasses=c("character", "numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))
data <- read.fwf("name.for",widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4),sep="", colClasses=c("character", "numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))
data <- read.fwf("name.for",widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4),sep="", colClasses=c("character", "numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))
data <- read.fwf("name.for",widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4),sep="")
data <- read.fwf("name.for",widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4))
View(data)
class(data[,3])
sum(data[,4])/length(data[,4])
sum(data[,4])
setwd("./R_programming")
setwd("./ProgrammingAssignment2")
matrix <- c(2:2,2:2)
matrix <- c(1:2,1:2)
A <- matrix(1:9,nrow=3,ncol=3)
A
source('~/Coursera/R_Programming/ProgrammingAssignment2/cachematrix.R')
m <- makeCacheMatrix(A)
m
cacheSolve(m)
solve(A)
A <- matrix(rep(1,9))
A <- matrix(rep(1,9),3,3)
A
solve(A)
A[2,2] = 5
A
solve(A)
A[3,3] = 2
solve(A)
solve(A)
solve(A)
solve(solve(A))
m <- makeCacheMatrix(A)
cacheSolve(m)
cacheSolve(m)
install.packages("plyr")
setwd("..")
setwd("..")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile="./idaho.csv")
table <- read.table("./idaho.csv")
table <- read.table("./idaho.csv", sep=",")
df <- data.frame(table)
head(df)
View(df)
table <- read.table("./idaho.csv", sep=",", header=TRUE)
df <- data.frame(table)
View(df)
View(df)
agricultureLogical <- df[(df$ACR==3 & df$AGS==6)]
agricultureLogical <- df[(df$ACR==3 & df$AGS==6),]
View(agricultureLogical)
which(agricultureLogical)
agricultureLogical <- (df$ACR==3 & df$AGS==6)
which(agricultureLogical)
?jpeg
install.packages("jpeg")
library(jpeg)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile="jeff.jpeg")
image <- jpeg("./jeff.jpeg",native = TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile="./jeff.jpeg", mode="wb")
image <- jpeg("./jeff.jpeg",native = TRUE)
?readjpeg
??readjpeg
image <- readJPEG("./jeff.jpeg", native =TRUE)
image
summary(image)
quantile(image,probs=c(0.3,0.8))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile="./file1.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", destfile="./file2.csv")
gdp <- read.table("./file1.csv", sep=",", header=TRUE)
summary(gdp)
View(table)
View(gdp)
View(gdp)
View(gdp)
gdp <- read.table("./file1.csv", sep=",", header=TRUE)
View(gdp)
gdp <- read.table("./file1.csv", sep=",", header=TRUE)
View(gdp)
gdp <- read.table("./file1.csv", sep=",", header=TRUE)
View(gdp)
gdp <- read.table("./file1.csv", sep=",", header=TRUE)
View(gdp)
edu <- read.table("./file2.csv", sep=",", header=TRUE)
edu <- read.table("./file2.csv", sep=",", header=TRUE)
edu <- read.table("./file2.csv", sep=",", header=TRUE)
edu <- read.table("./file2.csv", sep=",", header=TRUE)
edu <- read.table("./file2.csv", sep=",", header=TRUE)
edu <- read.table("./file2.csv", sep=",", header=TRUE)
edu <- read.table("./file2.csv", sep=",", header=TRUE)
edu <- read.table("./file2.csv", sep=",", header=TRUE)
edu <- read.table("./file2.csv", sep=",", header=TRUE)
edu <- read.table("./file2.csv", sep=",", header=TRUE)
View(gdp)
edu <- read.table("./file2.csv", sep=",", header=TRUE)
edu <- read.table("./file2.csv", sep=",", header=TRUE)
edu <- read.table("./file2.csv", sep=",", header=TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile="./file1.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", destfile="./file2.csv")
gdp <- read.csv("./file1.csv")
gdp
View(gdp)
edu <- read.csv("./file2.csv")
View(edu)
gdp_data <- df(gdp_data[5:194,])
gdp_data <- df(gdp[5:194,])
gdp_data <- data.frame(gdp[5:194,])
View(edu)
View(edu)
edu_data <- data.frame(edu_data)
edu_data <- data.frame(edu)
View(gdp_data)
View(edu_data)
merged <- merge(gdp_data,edu_data, by.x="X",by.y="CountryCode",all=TRUE)
View(merged)
View(gdp_data)
sorted <- sort(merged$Gross.domestic.product.2012,decreasing=TRUE)
sorted[13,]
sorted[,13]
sorted
merged[order(merged$Gross.domestic.product.2012)]
merged[order(merged$Gross.domestic.product.2012),]
sorted <-merged[order(merged$Gross.domestic.product.2012),]
View(sorted)
class(merged$Gross.domestic.product.2012)
merged$Gross.domestic.product.2012 <- as.numeric(merged$Gross.domestic.product.2012)
sorted <-merged[order(merged$Gross.domestic.product.2012),]
View(sorted)
merged <- merge(gdp_data,edu_data, by.x="X",by.y="CountryCode",all=TRUE)
View(merged)
merged$Gross.domestic.product.2012 <- as.numeric(merged$Gross.domestic.product.2012)
tapply(merged$Gross.domestic.product.2012,merged$Income.Group,mean)
tapply(merged$Gross.domestic.product.2012,merged$Income.Group,mean,na.rm=TRUE)
tapply(sorted$Gross.domestic.product.2012,sorted$Income.Group,mean,na.rm=TRUE)
tapply(merged$Gross.domestic.product.2012,merged$Income.Group,mean,na.rm=TRUE)
sorted <-merged[order(merged$Gross.domestic.product.2012),]
View(sorted)
sorted <-merged[order(merged$X.3),]
View(sorted)
sorted <-merged[order(as.numeric(merged$X.3),]
sorted <-merged[order(as.numeric(merged$X.3)),]
View(sorted)
set.seed(1)
rpois(5,2)
set.seed(10)
x <- rbin(10,10,0.5)
x <- rbinorm(10,10,0.5)
x <- rbinom(10,10,0.5)
e <- rnorm(10,0,20)
y <- 0.5 + 2 * x + e
round(pnorm(70,mean=80,sd=10)*100)
?qnorm
qnorm(0.95,mean=1100,sd=75)
qnorm(0.95,mean=100,sd=10)
qnorm(0.95,mean=1100,sd=(75^2)/1223)
qnorm(0.95,mean=1100,sd=(75^2)/100)
qnorm(0.95,mean=1100,sd=75/10)
pbinom(3,size=5,prob=0.5)
pbinom(3,size=5,prob=0.5,lower.tail=FALSE)
pnorm(16,mean=15,sd=sqrt(10/100))
pnorm(14,mean=15,sd=sqrt(10/100))
pnorm(16,mean=15,sd=sqrt(10/100))-pnorm(14,mean=15,sd=sqrt(10/100))
pnorm(16,mean=15,sd=sqrt(10^2/100))-pnorm(14,mean=15,sd=sqrt(10^2/100))
(1000-0.5)/(1/12/sqrt(1000))
(0.75-0.5)/(1/12/sqrt(1000))
(0.5-0.5)/(1/12/sqrt(1000))
9*8*7
3^9
9^3
ppois(10,lambda=5*3)
9!
factorail
factorial
factorial(3)
factorial(4)
factorial(9)/(factorial(3)*factorial(6))
runif(1000)
mean(runif(1000))
mean(runif(1000))
mean(runif(1000))
mean(runif(1000))
mean(runif(1000))
sqrt(1/12)
sqrt((1/12)^2
)
std(runif(1000))
sd(runif(1000))
sd(runif(1000))
sd(runif(1000))
sd(runif(1000))
sd(runif(1000))
sd(runif(1000))
sd(runif(1000))
sd(runif(1000))
sd(runif(1000))
sd(runif(1000))
sd(runif(1000))
sd(runif(1000))
sd(runif(1000))
sd(runif(1000))
a <- 1100
s <- 30
b <- 9
error <- qt(0.95,df=n-1)*s/sqrt(n)
error <- qt(0.95,df=b-1)*s/sqrt(b)
a+error
error <- qt(0.975,df=b-1)*s/sqrt(b)
a-error
a+error
-2/qt(.95,df=8)*3
2/qt(.95,df=8)*3
[1]
3.22/(sqrt(1/9+1/9))
-3.22/(sqrt(1/9+1/9))
sqrt((9*0.6 + 9*0.6)/(10 + 10 - 2))
5 - 3 + c(-1, 1) * qt(0.975, 20) * sp * (1/9 + 1/9)^0.5
sqrt((9*0.6 + 9*0.6)/(10 + 10 - 2))
5 - 3 + c(-1, 1) * qt(0.975, 20)  * (1/9 + 1/9)^0.5
sqrt((9*0.68 + 9*0.6)/(10 + 10 - 2))
5 - 3 + c(-1, 1) * qt(0.975, 20)  * (1/9 + 1/9)^0.5
sqrt((9*0.68 + 9*0.6)/(10 + 10 - 2))
5 - 3 + c(-1, 1) * qt(0.975, 20)  * (1/9 + 1/9)^0.5
sp <- sqrt((9*0.6 + 9*0.6)/(10 + 10 - 2))
5 - 3 + c(-1, 1) * qt(0.975, 20) * sp * (1/9 + 1/9)^0.5
sp <- sqrt((9*0.68 + 9*0.6)/(10 + 10 - 2))
5 - 3 + c(-1, 1) * qt(0.975, 20) * sp * (1/9 + 1/9)^0.5
?pnorm
pnorm(12,4)
pnorm(12,4,0.95)
pnorm(12,4,0.05)
pnorm(0.95,mean = 12, sd = 4)
pnorm(0.95,mean = 12, sd = 4,lower.tail=FALSE)
mean(c(140,138,150,148,135))
sd(c(140,138,150,148,135))
data <- load.csv("/activity.csv")
data <- read.csv("/activity.csv")
setwd("/RepData_PeerAssessment1")
setwd("/RepData_PeerAssessment1")
setwd("/RepData_Assessment1")
setwd("~/Coursera/RepData_PeerAssessment1")
load.packages("knitr")
download.packages("knitr")
read.packages("knitr")
isntall.packages("knitr")
install.packages("knitr")
data <- read.csv("activity.csv")
View(data)
data[,1]
data[$date]
data[,3]
data[,2]
data[1,]
type(data[,2])
typeof(data[,2])
head(data)
summary(data)
str(data)
data[,2] <- date(data[,2])
date(data[,2])
as.date(data[,2])
as.Date(data[,2])
data[,2] <- as.Date(data[,2])
View(data)
typeof(data[,2])
class(data[,2])
library(reshape2)
melted <- melt(data,id=c("steps","date"))
View(melted)
melted <- melt(data,id=c("steps","date","interval"))
melted <- melt(data,id=c("steps","date"))
dcast(melted, steps~date)
dcast(melted, steps~date,mean)
melted <- melt(data,id=c("steps"))
melted <- melt(data,id=c("steps","interval"))
dcast(melted, steps~date,mean)
mean <- aggregate(steps~date, data=data,FUN=mean)
mean
hist(mean)
hist(mean$steps)
median <- aggregate(steps~date, data=data,FUN=median)
View(median)
mean <- aggregate(steps~date, data=data[!is.na(data)],FUN=mean)
mean <- aggregate(steps~date, data=data[!is.na(data)],FUN=mean)
data1
data1 <- data[!is.na(data)]
data1
data1 <- data[!is.na(data[,1])]
data1 <- data[!is.na(data)]
data1 <- na.omit(data)
median <- aggregate(steps~date, data=data1,FUN=median)
View(median)
mean <- aggregate(steps~date, data=data1,FUN=mean)
View(mean)
str(median)
View(data1)
median(data1[289:576,])
median(data1[289:576,1])
median(data1[289:576,2])
'data1[289:576,1]
'data1[289:576,1]
data1[289:576,1]
mean <- aggregate(steps~interval, data=data1,FUN=mean)
mean <- aggregate(steps~interval, data=data1,FUN=mean)
mean <- aggregate(steps~date, data=data1,FUN=mean)
median <- aggregate(steps~date, data=data1,FUN=median)
View(median)
rm(mean)
rm(median)
mean <- aggregate(steps~interval, data=data1,FUN=mean)
View(mean)
plot(mean)
plot(mean,type=l)
plot(mean,type="l")
max(mean[,2])
max(mean[,1])
max(mean[,2])
mean[,max(mean[,2])
)
mean[,max(mean[,2])]
mean[which(mean$interval==max(mean$interval)),1]
nrow(data)-nrow(data1)
abs(nrow(data1)-nrow(data))
nrow(data1)-nrow(data)
nrow(data1)
which(5==averaged_mean[,1])
which(5==mean[,1])
which1(5==mean[,1])
which(15==mean[,1])
data2 <- data
for(i in 1:nrow(data2))
{
if(is.na(data2[i,1]))
{
data2[i,1] <- averaged_mean[which(averaged_mean[,1]==data2[i,3]),2]
}
}
averaged_mean <- mean
data2 <- data
for(i in 1:nrow(data2))
{
if(is.na(data2[i,1]))
{
data2[i,1] <- averaged_mean[which(averaged_mean[,1]==data2[i,3]),2]
}
}
View(data2)
is.na(data2[,1])
!is.na(data2[,1])
count(!is.na(data2[,1]))
sum(!is.na(data2[,1]))
sum(is.na(data2[,1]))
round(0.2)
calculated_mean2 <- aggregate(steps~date, data=data2,FUN=mean)
rm(mean)
data <- read.csv("activity.csv")
```{r}
str(data)
data[,2] <- as.Date(data[,2])
data1 <- na.omit(data)
calculated_mean <- aggregate(steps~date, data=data1,FUN=mean)
calculated_median <- aggregate(steps~date, data=data1,FUN=median)
hist(calculated_mean$steps)
calculated_mean
calculated_median
averaged_mean <- aggregate(steps~interval, data=data1,FUN=mean)
plot(averaged_mean, type="l")
averaged_mean[which(averaged_mean$interval==max(averaged_mean$interval)),1]
nrow(data)-nrow(data1)
data2 <- data
for(i in 1:nrow(data2))
{
if(is.na(data2[i,1]))
{
data2[i,1] <- round(averaged_mean[which(averaged_mean[,1]==data2[i,3]),2],digits=0)
}
}
```
for(i in 1:nrow(data2))
{
if(is.na(data2[i,1]))
{
data2[i,1] <- round(averaged_mean[which(averaged_mean[,1]==data2[i,3]),2],digits=0)
}
}
calculated_mean2 <- aggregate(steps~date, data=data2,FUN=mean)
calculated_median2 <- aggregate(steps~date, data=data2,FUN=median)
hist(calculated_mean2$steps)
calculated_mean
calculated_mean2
calculated_median
calculated_median2
a <- [2,2]
a <- c(2,3,2)
b <- c(2,2,2)
c(a,b)
c(a,b)
a[,b]
data$new <- rep(1,nrow(data))
data
data2$weekdays <- weekdays(data2[,2])
data2
isWeekday(data2[1,2])
isWeekday(data2[1,2])
library(timeDate)
Sys.setlocale("LC_MESSAGES", "en_GB.UTF-8")
Sys.setenv(LANG= "en_US.UTF-8")
data2$weekdays <- weekdays(data2[,2])
data2
Sys.getlocale()
Sys.setenv(LANG="en")
Sys.getlocale()
for(i in 1:nrow(data2))
{
if(data2[i,4] %in% c("mandag","tirsdag","onsdag","torsdag","fredag"))
{
data2[i,4] <- "weekday"
}
else
{
data2[i,4] <- "weekend"
}
}
data2
calculated_mean2 <- aggregate(steps~interval,weekday, data=data2,FUN=mean)
calculated_mean2 <- aggregate(steps~c(interval,weekday), data=data2,FUN=mean)
calculated_mean2 <- aggregate(steps~c("interval","weekday"), data=data2,FUN=mean)
mean_weekday <- aggregate(steps~interval, data=data2[which(data2$weekday=="weekday"),],FUN=mean)
data2[which(data2$weekday=="weekday"),]
data2[which(data2$weekday=="weekday"),]
data2[which(data2$weekday=="weekday"),2]
data2[which(data2$weekday=="weekday")]
data2[which(data2[,4=="weekday")]
data2[which(data2[,4]=="weekday")]
data2[which(data2[,4]=="weekday")]
data2[,4]
data2[which(data2[,4]=="weekday")]
data2[which(data2[,4]=="weekday"),]
weekday <- data2[which(data2[,4]=="weekday"),]
weekend <- data2[which(data2[,4]=="weekend"),]
library(ggplot2)
g <- ggplot(weekday)
g <- g+geomline()
g <- g+geom_line()
g
plot(weekday,type="l", col="red")
weekday_agg <- aggregate(steps~interval, data=weekday,FUN=mean)
weekend_agg <- aggregate(steps~interval, data=weekend,FUN=mean)
plot(weekday,type="l", col="red")
plot(weekday_agg,type="l", col="red")
lines(weekend_agg,type="l", col="blue")
legend(1, g_range[2], c("weekday","weekend"), cex=0.8,
col=c("red","blue"), pch=21:22, lty=1:2);
legend(1, 1, c("weekday","weekend"), cex=0.8,
col=c("red","blue"), pch=21:22, lty=1:2);
legend(1, 10, c("weekday","weekend"), cex=0.8,
col=c("red","blue"), pch=21:22, lty=1:2);
legend(1, 200, c("weekday","weekend"), cex=0.8,
col=c("red","blue"), pch=21:22, lty=1:2);
legend(1, 200, c("weekday","weekend"), cex=0.8, col=c("red","blue"), lty=1:2);
legend(1, 200, c("weekday","weekend"), cex=0.8, col=c("red","blue"), lty=1:1);
